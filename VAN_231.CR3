' CR3000 Series Datalogger
' Program name: VAN_231_V08.1.CR3
' Written for CR3000 datalogger on Vanmet tower.
'
' Version 1 Created 2013-09-18 by AK
  ' converted all kPa to mb.
' Version 2 modified 5/20/14.  
  ' Added all sensors to 5 minute output.
' Version 3 Created 2/15/2015 by AK
  ' Added 5min max/min to air temperature probes. 
  '  Added 5min max wind gust to propellor. Removed 15 and 60 min from output.
' Version 4 Created 3/18/2015. 
  '  Added 1.5m and 4.5m min/max dewpoint to 5min table. 
  '  Changed progid from FP2 to Long
  '  Removed VPD, VAP, and SatVP from output
' Version 5 Created 4-15-15
  '  Changed pyranometer multiplyer back to 84.274 for pyranometer serial no. 920423,
  '  which was installed on 8-26-11.  Multiplyer incorrectly changed to 104.341 on
  '  5-21-12 and then incorrectly changed again on 9-4-13 to 74.355.
' Version 6 Created 11-17-2015
  '  Removed MJ solar output totals from all tables
  '  Removed daily table output.
  '  Added Cardout(), added NL116 with 4GB CF card.
' Version 7 created 11-19-2015
  '  Removed CardOut() - this command expired for CF cards over 4GB
  '  Added TableFile() command to save data in TOB3 format on CRD.
  '  Removed TableFile() to USB becuase only one TableFile() call permitted per table.
  '  Lost network comm with logger yesterday so verified MAC stored on logger.  
' Version 8.1 created 3-23-16 by GC
  ' Added standardized SYS table to track calibration coeficients, SWE tares, and raw instrument values
  ' Add decimal subversionioning: 8 is VARA program version; 1 is a unified site program version.

'PROGRAM VARIABLES
'////////////////////////////////////////////////////         
'Declare Constant Variable    
Const LID              = 231

'Call PreserveVariables so variables will reflect last known value if the data logger experiences a power loss. 
PreserveVariables

'Declare Public Variable 
Public LOGGERID
Public PROGID as Long
Public PROG_VERS = 8.1
Public BATTERY_V

Public HMP_150(3) As Float
Public HMP_450(3) As Float
Public AIR_250
Public AIR_350
Public ASP_350

Public SOILT(4)
Public WCRWC(4)
Public WCRPA(4)


Public WINDSPEED
Public WIND_DIR

Public SR50(2)
Public TEMP_CORR_DISTANCE
Public SNOW_INITIAL_DISTANCE = 5.03
Public SNOWDEPTH
Public SNOW_PILL
Public SNOW_TARE

Public SOLAR_Wm2

Public AIR_150_diag=1 '1 = sensor installed; 0=sensor removed
Public AIR_250_diag=1 '1 = sensor installed; 0=sensor removed
Public SNOW_diag=1 '1 = snow present; 0=snow absent


Alias HMP_150(1) = AIR_150
Alias HMP_150(2) = RH_150
Alias HMP_150(3) = DEWPT150
Alias HMP_450(1) = AIR_450
Alias HMP_450(2) = RH_450
Alias HMP_450(3) = DEWPT450
Alias SOILT(1)   = SOILT_10
Alias SOILT(2)   = SOILT_20
Alias SOILT(3)   = SOILT_50
Alias SOILT(4)   = SOILT_100
Alias WCRWC(1)   = WCRWC_10
Alias WCRWC(2)   = WCRWC_20
Alias WCRWC(3)   = WCRWC_50
Alias WCRWC(4)   = WCRWC_100
Alias WCRPA(1)   = WCRPA_10
Alias WCRPA(2)   = WCRPA_20
Alias WCRPA(3)   = WCRPA_50
Alias WCRPA(4)   = WCRPA_100
Alias SR50(1)    = SNOW_RAW_DIST
Alias SR50(2)    = QUALITY

Units AIR_150         = deg C
Units AIR_250         = deg C
Units AIR_350         = deg C
Units AIR_450         = deg C
Units ASP_350         = deg C
Units RH_150          = percent
Units RH_450          = percent
Units DEWPT150        = deg C
Units DEWPT450        = deg C
Units SOILT_10        = deg C
Units SOILT_20        = deg C
Units SOILT_50        = deg C
Units SOILT_100       = deg C
Units WCRWC_10        = fraction
Units WCRWC_20        = fraction
Units WCRWC_50        = fraction
Units WCRWC_100       = fraction
Units WCRPA_10        = number
Units WCRPA_20        = number
Units WCRPA_50        = number
Units WCRPA_100       = number
Units SOLAR_Wm2       = W m-2
Units SNOW_PILL       = mm
Units WINDSPEED       = m s-1
Units WIND_DIR        = degrees
Units SNOWDEPTH       = meters
Units BATTERY_V       = volts
Units SNOW_TARE       = number
Units LOGGERID        = number
Units PROGID          = number
Units AIR_150_diag    = number
Units AIR_250_diag    = number
Units SNOW_diag       = number

'POWER Status
'#######################################################
' Set power levels. Each level changes function
Public BATT_CHRG_FULL =  12.4
Public BATT_CHRG_LOW = 12.2
Public BATT_CHRG_VERY_LOW = 12.0
Public BATT_CHRG_EMPTY = 11.8

' Set power to peripherals
Public RADIO_PWR = True
Public RADIO_INTVL_pblc = 4
Dim RADIO_INTVL = 4*60
Public RADIO_INTVL_mult = 1
Public RADIO_INTVL_count = 1
Public RADIO_TIME_SINCE_LAST
Public ASP_PWR = True
Public PWR_AMP
Public coef_PWR_SHUNT = 100 '1 / 0.01 ohms

DataTable(PWR,true,-1)
  TableFile("CRD:VAN_231_PWR_",64,-1,0,1,Day,0,0)
  DataInterval(0,5,min,10)
  Sample (1,LOGGERID,FP2)
  Sample (1,PROGID,Long)
  Sample (1,PROG_VERS,FP2)
  Minimum(1,BATTERY_V,FP2,False,False)
  Average(1,PWR_AMP,FP2,False)
  Maximum(1,PWR_AMP,FP2,False,False)
  Sample(1,ASP_PWR,Boolean)
  Sample(1,RADIO_PWR,Boolean)  
  Maximum(1,RADIO_INTVL,FP2,False,False)
  Maximum(1,RADIO_INTVL_count,FP2,False,False)
  Maximum (1,RADIO_INTVL_mult,FP2,False,False)
EndTable

'SYSTEM Diagnostics
'#######################################################
'SYS Table variables
Dim SWE_RAW
Dim SNOW_AIR_TEMP
Dim SNOW_DIST_CORRECTION
Dim RH_150_RAW
Dim RH_450_RAW
Dim SOLAR_Wm2_RAW
Public ASP_SPEED

Alias TEMP_CORR_DISTANCE= SNOW_TEMP_CORR_DISTANCE
Alias SNOW_TARE = SWE_TARE

'COEF defenitions
Dim coef_ASP_SPEED
Public coef_AIR_150 = 0.1
Public offset_AIR_150 = -40
Public coef_RH_150 = 0.1
Public coef_AIR_450 = 0.1
Public offset_AIR_450 = -40
Public coef_RH_450 = 0.1
Public coef_WCRPA = 0.001
Public coef_SOLAR_Wm2 = 84.274
Public coef_SWE = 714.52
Public coef_WINDSPEED = 0.098

DataTable(SYS,true,-1)
  TableFile("CRD:VAN_231_SYS_",64,-1,0,1,Day,0,0)
  DataInterval(0,5,min,10)
  Sample (1,LOGGERID,FP2)
  Sample (1,PROGID,Long)
  Sample (1,PROG_VERS,FP2)
  Sample (1,SNOW_INITIAL_DISTANCE,FP2)
  Sample(1,SNOW_RAW_DIST,FP2)
  Sample(1,SNOW_DIST_CORRECTION,FP2)
  Sample(1,SNOW_TEMP_CORR_DISTANCE,FP2)  
  Sample(1,SNOW_AIR_TEMP,FP2)
  Sample(1,SWE_RAW,FP2)
  Sample(1,SWE_TARE,FP2)  
  Totalize(1,ASP_SPEED,Long,False)
  Maximum(1, RH_150_RAW,FP2,False,0)
  Maximum(1, RH_450_RAW,FP2,False,0)
  Minimum(1, SOLAR_Wm2_RAW,FP2,False,0)
  Sample(1,WCRPA_10,FP2)
  Sample(1,WCRPA_20,FP2)
  Sample(1,WCRPA_50,FP2)
  Sample(1,WCRPA_100,FP2)  
  Sample(1,coef_SWE,FP2)
  Sample(1,coef_AIR_150,FP2)
  Sample(1,coef_AIR_450,FP2)
  Sample(1,offset_AIR_150,FP2)
  Sample(1,offset_AIR_450,FP2)
  Sample(1,coef_RH_150,FP2)
  Sample(1,coef_RH_450,FP2)
  Sample(1,coef_WCRPA,FP2)
  Sample(1,coef_WINDSPEED,FP2)
EndTable
'
'\\\\\\\\\\\\\\\\\\\\\\\\PROGRAM OUTPUT////////////////////////
'5 MINUTE OUTPUT
DataTable(Table105,true,-1)
  TableFile("CRD:VAN_231_Table105_",64,-1,0,1,Day,0,0)    
  DataInterval(0,5,Min,10)                   
  Sample(1,LOGGERID,FP2)
  Sample(1,PROGID,Long)
  Average(1,AIR_150,FP2,0)
  Average(1,AIR_250,FP2,0)
  Average(1,AIR_350,FP2,0)
  Average(1,AIR_450,FP2,0)
  Average(1,ASP_350,FP2,0)
  Average(1,RH_150,FP2,0)
  Average(1,RH_450,FP2,0)
  Average(1,DEWPT150,FP2,0)
  Average(1,DEWPT450,FP2,0)  
  Average(4,SOILT,FP2,0)
  Average(4,WCRWC,FP2,0)
  Average(1,SOLAR_Wm2,FP2,0)
  Sample(1,SNOWDEPTH,FP2)
  Sample(1,QUALITY,FP2)
  Average(1,WINDSPEED,FP2,0)
  Sample(1,WIND_DIR,FP2)
  Sample(1,SNOW_PILL,FP2)
  WindVector(1,WINDSPEED,WIND_DIR,FP2,False,0,0,0)
  Average(1,BATTERY_V,FP2,0)
  Sample(1,AIR_150_diag,FP2)
  Sample(1,AIR_250_diag,FP2)
  Sample(1,SNOW_diag,FP2)
  Maximum (1,AIR_150,FP2,False,False)
  Maximum (1,AIR_250,FP2,False,False)
  Maximum (1,AIR_350,FP2,False,False)
  Maximum (1,ASP_350,FP2,False,False)
  Maximum (1,AIR_450,FP2,False,False)
  Maximum(1,DEWPT150,FP2,False,False)
  Maximum(1,DEWPT450,FP2,False,False)
  Minimum (1,AIR_150,FP2,False,False)
  Minimum (1,AIR_250,FP2,False,False)
  Minimum (1,AIR_350,FP2,False,False)
  Minimum (1,ASP_350,FP2,False,False)
  Minimum (1,AIR_450,FP2,False,False)
  Minimum(1,DEWPT150,FP2,False,False)
  Minimum(1,DEWPT450,FP2,False,False)
  Maximum (1,WINDSPEED,FP2,False,False)
  
EndTable

'\\\\\\\\\\\\\\\\\\\\\\\\\\\ PROGRAM ////////////////////////////

BeginProg
  SNOW_AIR_TEMP = AIR_450
  Scan(15,Sec, 3, 0)
    '
    'PART 1: MEASURE SENSORS
    '
    'MEASURE 1.5M & 4.5M HMP45C'S
    PortSet(1,1)
    Delay(0,150,mSec)
    VoltDiff(AIR_150,1,mv1000,1,0,0,_60Hz,coef_AIR_150,offset_AIR_150)
    VoltDiff(RH_150,1,mv1000,2,0,0,_60Hz,coef_RH_150,0)
    VoltDiff(AIR_450,1,mv1000,3,0,0,_60Hz,coef_AIR_450,offset_AIR_450)
    VoltDiff(RH_450,1,mv1000,4,0,0,_60Hz,coef_RH_450,0)
    PortSet(1,0)
    '
    'MEASURE 4 SOIL TEMPS
    Therm107(SOILT,4,9,VX1,0,_60Hz,1,0)
    '
    'MEASURE FOUR WATER CONTENT REFLECTOMETERS
    PortSet(4, 1)              
    PeriodAvg(WCRPA,4,mV1000,13,0,0,10,50,coef_WCRPA,0)
    PortSet(4, 0)
    '
    'MEASURE PYRANOMETER
    VoltDiff(SOLAR_Wm2,1,mV50,9,true,0,_60Hz,coef_SOLAR_Wm2,0)
    '
    'MEASURE SNOW PILLOW
    BrFull(SNOW_PILL,1,mV20,10,VX2,1,1524,true,true,0,_60Hz,coef_SWE,0)
    '
    'MEASURE WIND SPEED
    PulseCount(WINDSPEED,1,1,1,1,coef_WINDSPEED,0)
    '
    'MEASURE WIND DIRECTION
    BrHalf(WIND_DIR,1,mv5000,21,VX3,1,5000,True,0,_60Hz,355,0)
    '
    'MEASURE 2.5M AIR TEMP
	  Therm107(AIR_250,1,22,VX4,0,_60Hz,1,0)
	  '
	  'MEASURE 3.5M AIR TEMP
	  Therm107(AIR_350,1,23,VX4,0,_60Hz,1,0)
	  '
	  'MEASURE 3.5M ASPIRATED AIR TEMP
	  Therm107(ASP_350,1,24,VX4,0,_60Hz,1,0)
	  'MEASURE ASPIRATED FAN SPEED
	  coef_ASP_SPEED = 1/15
	  PulseCount(ASP_SPEED,1,2,0,0,coef_ASP_SPEED,0)
	  '
	  'MEASURE SR50A SNOW DEPTH SENSOR
	  If  TimeIntoInterval(0,300,Sec) Then                             
		  SDI12Recorder(SR50(),3,0,"M1!",1,0)
	  EndIf
	  '
	  'MEASURE CURRENT FROM SHUNT
	  VoltDiff (PWR_AMP,1,mV5000,14,True ,0,250,coef_PWR_SHUNT,0)
	  '
	  'MEASURE BATTERY VOLTAGE
	  Battery(BATTERY_V)
	  '
	  'PART2: PROCESS DATA
	  '
	  'SET RH TO 100% IF GREATER THAN 100%
	  RH_150_RAW = RH_150
	  If RH_150>100 AND RH_150<108 Then RH_150=100
	  RH_450_RAW =  RH_450
	  If RH_450>100 AND RH_450<108 Then RH_450=100
	  '
	  'COMPUTE 1.5M & 4.5M DEWPOINT
	  DewPoint(DEWPT150,AIR_150,RH_150)
	  DewPoint(DEWPT450,AIR_450,RH_450)
	  '
	  'CONVERT WCR PERIOD TO WATER CONTENT
	  WCRWC_10=-0.187+0.037*WCRPA_10+0.335*WCRPA_10^2+0*WCRPA_10^3+0*WCRPA_10^4+0*WCRPA_10^5
	  WCRWC_20=-0.187+0.037*WCRPA_20+0.335*WCRPA_20^2+0*WCRPA_20^3+0*WCRPA_20^4+0*WCRPA_20^5
	  WCRWC_50=-0.187+0.037*WCRPA_50+0.335*WCRPA_50^2+0*WCRPA_50^3+0*WCRPA_50^4+0*WCRPA_50^5
	  WCRWC_100=-0.187+0.037*WCRPA_100+0.335*WCRPA_100^2+0*WCRPA_100^3+0*WCRPA_100^4+0*WCRPA_100^5
	  '
	  'SET SOLAR RADIATION TO 0 IF LESS THAN 0
	  SOLAR_Wm2_RAW = SOLAR_Wm2
	  If (SOLAR_Wm2 < 0) Then                                  
		  SOLAR_Wm2 = 0
	  EndIf
	  '
	  '
	  'SUBTRACT TARE FOR SNOW PILLOW
	  SWE_RAW = SNOW_PILL
	  SNOW_PILL = SNOW_PILL - SNOW_TARE
	  '
	  'CORRECT WIND DIRECTION MEASUREMENT
	  If WIND_DIR>360 Then WIND_DIR=0
	  If WIND_DIR<0 Then WIND_DIR=0
	  
	  'CORRECT SNOW DEPTH MEASUREMENT
	  SNOW_DIST_CORRECTION = (SQR((AIR_450+273.15)/273.15))
	  TEMP_CORR_DISTANCE = SNOW_RAW_DIST*SNOW_DIST_CORRECTION
	  SNOWDEPTH=SNOW_INITIAL_DISTANCE-TEMP_CORR_DISTANCE
	  
	  ' POWER CONTROLS
	  '##########################################################
	  'Reset telemetry counter at midnight
	  If TimeIntoInterval(0,24,Hr) Then
		  RADIO_INTVL_count = 0
		  RADIO_INTVL = RADIO_INTVL_pblc*60
	  EndIf
	  
	  If BATTERY_V > BATT_CHRG_FULL Then
	  	RADIO_INTVL_mult =  1
		  ASP_PWR =  True
		  RADIO_PWR = True
		
	  ElseIf BATTERY_V <= BATT_CHRG_FULL  AND BATTERY_V> BATT_CHRG_LOW Then
		  RADIO_INTVL_mult = 2 
		  ASP_PWR =  True
		  RADIO_PWR = True
		
	  ElseIf BATTERY_V <= BATT_CHRG_LOW  AND BATTERY_V> BATT_CHRG_VERY_LOW Then
		  RADIO_INTVL_mult = 3
		  ASP_PWR =  True
		  RADIO_PWR = True
		
	  ElseIf BATTERY_V <= BATT_CHRG_VERY_LOW  AND BATTERY_V> BATT_CHRG_EMPTY Then
		  'If battery is very low, the radio will only transmit at 1600 (the counter 
		  'is reset every night) 
      RADIO_INTVL = 16*60
		  RADIO_INTVL_mult = 1
		  ASP_PWR =  True
		  RADIO_INTVL_count = 0
		  RADIO_PWR = True
		
 	  ElseIf BATTERY_V <= BATT_CHRG_EMPTY		
		  ASP_PWR =  False
		  RADIO_PWR = False
	  EndIf
		 
	  If TimeIsBetween(0,10,RADIO_INTVL,min) Then
		  RADIO_INTVL_count += 1
		  If RADIO_INTVL_count >= RADIO_INTVL_mult Then
			  SW12(1,RADIO_PWR)
			  EthernetPower(RADIO_PWR)
			  SW12(2, ASP_PWR)			  
		    RADIO_INTVL_count = 0
			Timer (3,Sec,2)
		  EndIf
	  Else
		  ' Turn off radio the rest of the time
		  SW12(1,False)
		  EthernetPower(RADIO_PWR)
		 RADIO_TIME_SINCE_LAST = Timer(3,Sec,4)
	  EndIf
	  

	

	  'PART 3: OUTPUT DATA
	  '
	  'SET LOGGERID TO 231
	  LOGGERID = LID
	  '
	  'RECORD THE SIGNATURE AS PROGID
	  If  TimeIntoInterval(0,1,Min) Then
		  PROGID=Status.ProgSignature(1,1)
		EndIf
	  '
	  '5 MINUTE OUTPUT
    CallTable Table105 
    CallTable SYS
    CallTable PWR
  NextScan
EndProg
