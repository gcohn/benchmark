'Program name: UPLO_235_V03.CR3
'

' Version 1 written: 9-11-15 by JM & SW  
' Version 2 created on 9-11-15
	' A. Changes 1.5M & 4.5M HMP45C programing from SW12v to C5.
	' B. Adds measurement of SA_TEMP and SA_PRECIP.
	' Modified 11/23/2015, AK
    ' Removed CardOut() - this command expired for CF cards over 4GB
    ' Added TableFile() command to save data in TOB3 format on CRD.
    ' Removed TableFile() to USB becuase only one TableFile() call permitted per table.
' Version 3 created on 1/14/2016
    ' Changed TableFile("CRD:UPLO_235_Table105",64,-1,0,1,Day,0,0)  to
    ' TableFile("CRD:UPLO_235_Table105_",64,-1,0,1,Day,0,0) 
' Version 4 created on 2/3/2016
	' Modifications to heater pump subroutine (for standalone raing gauge)
	' 1. removed FLAG array variable
	' 2. Added CONT_*, SA_*, and PUMP_ON variables to public table
	' 3. Removed hard coded pump shut off values
	' 4. Assigned CONT_* variables default shut off values to be altered at the terminal
	' 5. Altered pump control logic
	' Added CONT data table to monitor pump and pump control function
	' Added PROG_VERS variable to public table (output to CONT data table)
' Version 5 created on 2/29/16 by GC
	' Fixed output variable assignment and standardized naming (primarily on 236)
' Version 6 Create 3/23/16 by GC
	' Standardize formatting with other benchmark Met stations
	' Add calibration coefficients and offsets to SYS table

Const SCAN_INTERVAL_FAST = 1   'Scan interval in Sec for sonic
Const SCAN_INTERVAL_SLOW = 15  'Scan interval in Sec for rest of program
Const OUTPUT_INTERVAL    = 5   'Output interval in minutes
Const LID                = 235

'\\\\\\\\\\\\\\\\\\\\\\\\\ DECLARATIONS /////////////////////////

Public HMP_150(3) As Float
Public HMP_450(3) As Float
Public AIR_250
Public AIR_350
Public ASP_350
Public SOILT(4)
Public WCRWC(4)
Public WINDSPEED
Public WIND_DIR
Public BATTERY_V
Public SA_PRECIP
Public PROG_VERS=6
Public WCRPA(4)
Public sncstring As String * 60
Public sncstring_bytes
Public snc(5)
Public stat_flag
Public Vh
Public diag_flag
Public nan_flag
Public strtosend
Public LOGGERID
Public PROGID As Long
Public AIR_150_diag=1 '1 = sensor installed; 0=sensor removed
Public AIR_250_diag=1 '1 = sensor installed; 0=sensor removed

Alias HMP_150(1) = AIR_150
Alias HMP_150(2) = RH_150
Alias HMP_150(3) = DEWPT150
Alias HMP_450(1) = AIR_450
Alias HMP_450(2) = RH_450
Alias HMP_450(3) = DEWPT450
Alias SOILT(1)   = SOILT_10
Alias SOILT(2)   = SOILT_20
Alias SOILT(3)   = SOILT_50
Alias SOILT(4)   = SOILT_100
Alias WCRWC(1)   = WCRWC_10
Alias WCRWC(2)   = WCRWC_20
Alias WCRWC(3)   = WCRWC_50
Alias WCRWC(4)   = WCRWC_100
Alias WCRPA(1)   = WCRPA_10
Alias WCRPA(2)   = WCRPA_20
Alias WCRPA(3)   = WCRPA_50
Alias WCRPA(4)   = WCRPA_100
Alias snc(1)     = Ux         'positive for S--N
Alias snc(2)     = Uy         'positive for E--W
Alias snc(3)     = unit As String * 1
Alias snc(4)     = Ts         'in deg C
Alias snc(5)     = diag

Units AIR_150         = deg C
Units AIR_250         = deg C
Units AIR_350         = deg C
Units AIR_450         = deg C
Units ASP_350         = deg C
Units RH_150          = percent
Units RH_450          = percent
Units DEWPT150        = deg C
Units DEWPT450        = deg C
Units SOILT_10        = deg C
Units SOILT_20        = deg C
Units SOILT_50        = deg C
Units SOILT_100       = deg C
Units WCRWC_10        = fraction
Units WCRWC_20        = fraction
Units WCRWC_50        = fraction
Units WCRWC_100       = fraction
Units WCRPA_10        = number
Units WCRPA_20        = number
Units WCRPA_50        = number
Units WCRPA_100       = number
Units WINDSPEED       = m s-1
Units WIND_DIR        = degrees
Units BATTERY_V       = volts
Units SA_PRECIP       = millimeter
Units SA_TEMP         = deg C
Units CON_TEMP        = number
Units Ux              = [m s-1]
Units Uy              = [m s-1]
Units Ts              = [deg C]
Units diag            = [1]
Units Vh              = [m s-1]
Units LOGGERID        = number
Units PROGID          = number
Units AIR_150_diag    = number  '1 when sensor is present, 0 when not
Units AIR_250_diag    = number  '1 when sensor is present, 0 when not

Dim n                 = 1

'CONTROL PARAMETERS
'#######################################################
'CONT Table variables
Public SA_TEMP
Public SA_RUN_TIME
Public SA_OFF_TIME
Public CON_TEMP = 4
Public CON_TIME_OFF = 900
Public CON_TIME_ON = 1209600
Public CON_TIME
Public CON_PUMP
Public PUMP_ON

Units SA_RUN_TIME = seconds
Units SA_OFF_TIME = seconds
Units CON_TIME_OFF = seconds
Units CON_TIME_ON = seconds

Dim LogNow = false

'CONTROL TALBE- Status of pump program controls 
DataTable(CONT,true,-1)
  TableFile("CRD:UPLO_235_CONT_",64,-1,0,1,Day,0,0) 
  DataInterval(0,5,Min,10)
  Sample (1,LOGGERID,FP2)
  Sample (1,PROGID,Long)
  Sample (1,PROG_VERS,FP2)
  Sample (1,SA_TEMP,FP2)
  Sample (1,CON_TEMP,FP2)
  Sample (1,PUMP_ON,Boolean)
  Sample (1,CON_PUMP,Boolean)
  Sample (1,CON_TIME,Boolean)
  Sample (1,SA_RUN_TIME,Long)
  Sample (1,SA_OFF_TIME,Long)
  Sample (1,CON_TIME_ON,Long)
  Sample (1,CON_TIME_OFF,Long)
EndTable

'\\\\\\\\\\\\\\\\\\\\\\\\ OUTPUT SECTION ////////////////////////
'
'5 MINUTE OUTPUT
DataTable(Table105,true,-1)
  TableFile("CRD:UPLO_235_Table105_",64,-1,0,1,Day,0,0) 
  DataInterval(0,5,Min,10)
  Sample(1,LOGGERID,FP2)
  Sample(1,PROGID,Long)
  'AVERAGES
  Average (1,AIR_150,FP2,0)
  Average (1,AIR_250,FP2,0)
  Average (1,AIR_350,FP2,0)
  Average (1,AIR_450,FP2,0)
  Average (1,ASP_350,FP2,0)
  Average (1,RH_150,FP2,0)
  Average (1,RH_450,FP2,0)
  Average (1,DEWPT150,FP2,0)
  Average (1,DEWPT450,FP2,0)
  Average (4,SOILT,FP2,0)
  Average (4,WCRWC,FP2,0)
  Average (1,SA_TEMP,FP2,0)
  Average (1,BATTERY_V,FP2,0)  
  'SAMPLES
  Sample (1,SA_PRECIP,FP2)
  Sample (1,AIR_150_diag,FP2)
  Sample (1,AIR_250_diag,FP2)
  'MAXIMUMS  
  Maximum (1,AIR_150,FP2,False,False)
  Maximum (1,AIR_250,FP2,False,False)
  Maximum (1,AIR_350,FP2,False,False)
  Maximum (1,ASP_350,FP2,False,False)
  Maximum (1,AIR_450,FP2,False,False)
  Maximum (1,DEWPT150,FP2,False,False)
  Maximum (1,DEWPT450,FP2,False,False)
  Maximum (1,WINDSPEED,FP2,False,False)
  'MINIMUMS
  Minimum (1,AIR_150,FP2,False,False)
  Minimum (1,AIR_250,FP2,False,False)
  Minimum (1,AIR_350,FP2,False,False)
  Minimum (1,ASP_350,FP2,False,False)
  Minimum (1,AIR_450,FP2,False,False)
  Minimum (1,DEWPT150,FP2,False,False)
  Minimum (1,DEWPT450,FP2,False,False)   
  'WINDVECTOR 
  WindVector(1,WINDSPEED,WIND_DIR,FP2,False,0,0,0)
  'START OF SONIC OUTPUT
  Totalize (1,n,FP2,False)  
  FieldNames ("N_samples")
  Totalize (1,n,FP2,diag<>0)
  FieldNames ("N_samples_good")
  Maximum (1,diag,FP2,diag_flag,false)
  Minimum (1,sncstring_bytes,FP2,False,False)
  Average (2,snc(1),FP2,stat_flag)
  Average (1,snc(4),FP2,stat_flag)
  StdDev (2,snc(1),FP2,stat_flag)
  StdDev (1,snc(4),FP2,stat_flag)
  WindVector (1,Uy,-Ux,FP2,stat_flag,SCAN_INTERVAL_FAST*60*OUTPUT_INTERVAL/6,1,0)
  FieldNames ("SPD_mean,DIR_mean,DIR_std") ' field names for sonic data
  Maximum (1,Vh,FP2,stat_flag,False)
  FieldNames ("SPD_Gust_max")  
  
EndTable


'\\\\\\\\\\\\\\\\\\\\\\\\\\\ PROGRAM ////////////////////////////
'
'MEASURE GILL WINDOBSERVER II SONIC ANAMOMETER
BeginProg
  SW12 (1,0)
  Delay (1,5,Sec)
  SW12 (1,1)
  SerialOpen (Com1,9600,16,0,100)
  SerialFlush(Com1)
  Delay (1,5,Sec)
  nan_flag = 0
  Scan (SCAN_INTERVAL_FAST,Sec,0,0)
    SerialInRecord (Com1,sncstring,0,0,0,sncstring_bytes,01)
    Delay (1,10,mSec)
    SplitStr (snc(1),sncstring,",",5,4)
    SerialFlush (Com1)
    If diag = NaN Then
      diag_flag = 1
      stat_flag = 1
      nan_flag = nan_flag + 1
    ElseIf diag <> 0
      diag_flag = 0
      stat_flag = 1
    ElseIf Ux = NaN OR Uy = NaN OR Ts = NaN
      diag_flag = 0
      stat_flag = 1
      nan_flag = nan_flag + 1
    Else
      diag_flag = 0
      stat_flag = 0
      nan_flag = 0
    EndIf
    Vh  =  SQR(Ux^2+Uy^2)
    If nan_flag > 1 Then
      SW12 (1,0)
      Delay (1,5,Sec)
      SW12 (1,1)
      SerialClose (Com1)
      Delay (1,5,Sec)
      SerialOpen (Com1,9600,16,0,100)
      SerialFlush (Com1)
      nan_flag = 0
    EndIf
    '
    'MEASURE WIND SPEED
    PulseCount(WINDSPEED,1,1,1,1,0.098,0)
  NextScan

  SlowSequence
  Scan(SCAN_INTERVAL_SLOW,Sec, 0, 0)        
    'PUMP CONTROL
    '#############################################################
    ' CHECK ORIFIC TEMPERATURE 
    ' pump on at low temp
    If (SA_TEMP < CON_TEMP) Then                      
      CON_PUMP = true
    EndIf
    ' pump off at high temp
    If (CON_TEMP+1 <= SA_TEMP) Then
      CON_PUMP = false
    EndIf
    'CHECK TIME
    SA_OFF_TIME = Timer(2,sec,4)
    If (SA_OFF_TIME > CON_TIME_ON) Then
      CON_TIME = false
    EndIf
    SA_RUN_TIME = Timer(1,Sec,4)
    If (SA_RUN_TIME > CON_TIME_OFF OR CON_TIME = true) Then
      CON_PUMP = false
      CON_TIME = true
    EndIf
    '
    ' Take action
    PortGet(PUMP_ON,8)
    If (CON_PUMP = true AND PUMP_ON = 0 ) Then
      PortSet(8,1)
      Timer(1,Sec,2)
      Timer(2,Sec,3)
    EndIf
    If (CON_PUMP = false AND PUMP_ON = 1) Then
      PortSet(8,0)
      Timer(1,Sec,3)
      Timer(2,Sec,2)
    EndIf
    '
    '
    'MEASURE 1.5M & 4.5M HMP45C'S
    PortSet(5,1)
    Delay(0,150,mSec)
    VoltDiff(AIR_150,1,mv1000,1,0,0,_60Hz,0.1,-40)
    VoltDiff(RH_150,1,mv1000,2,0,0,_60Hz,0.1,0)
    VoltDiff(AIR_450,1,mv1000,3,0,0,_60Hz,0.1,-40)
    VoltDiff(RH_450,1,mv1000,4,0,0,_60Hz,0.1,0)
    PortSet(5,1)
    '
    'MEASURE 4 SOIL TEMPS
    Therm107(SOILT,4,9,VX1,0,_60Hz,1,0)
    '
    'MEASURE FOUR WATER CONTENT REFLECTOMETERS
    PortSet(4,1)
    PeriodAvg(WCRPA,4,mV1000,13,0,0,10,50,0.001,0)
    PortSet(4,0)
    '
    'MEASURE WIND DIRECTION
    BrHalf(WIND_DIR,1,mv5000,17,VX2,1,5000,True,0,_60Hz,355,0)
    '
    'MEASURE 2.5M AIR TEMP
    Therm107(AIR_250,1,18,VX3,0,_60Hz,1,0)
    '
    'MEASURE 3.5M AIR TEMP
    Therm107(AIR_350,1,19,VX3,0,_60Hz,1,0)
    '
    'MEASURE 3.5M ASPIRATED AIR TEMP
    Therm107(ASP_350,1,20,VX3,0,_60Hz,1,0)
    '
    'MEASURE SAR ORIFICE TEMP
    Therm107(SA_TEMP,1,21,VX4,0,_60HZ,1,0)
    '
    'MEASURE STAND ALONE RAIN GAGE FLOAT  
    VoltDiff(SA_PRECIP,1,mV200,12,True,0,_60Hz,3.7160,-184.31)
    '
    'MEASURE BATTERY VOLTAGE
    Battery(BATTERY_V)
    '
    'PART2: PROCESS DATA
    '
    'SET RH TO 100% IF GREATER THAN 100%
    If RH_150>100 AND RH_150<108 Then RH_150=100
    If RH_450>100 AND RH_450<108 Then RH_450=100
    '
    'COMPUTE 1.5M & 4.5M DEWPOINT
    DewPoint(DEWPT150,AIR_150,RH_150)
    DewPoint(DEWPT450,AIR_450,RH_450)
    '
    'CONVERT WCR PERIOD TO WATER CONTENT
    WCRWC_10=-0.187+0.037*WCRPA_10+0.335*WCRPA_10^2+0*WCRPA_10^3+0*WCRPA_10^4+0*WCRPA_10^5
    WCRWC_20=-0.187+0.037*WCRPA_20+0.335*WCRPA_20^2+0*WCRPA_20^3+0*WCRPA_20^4+0*WCRPA_20^5
    WCRWC_50=-0.187+0.037*WCRPA_50+0.335*WCRPA_50^2+0*WCRPA_50^3+0*WCRPA_50^4+0*WCRPA_50^5
    WCRWC_100=-0.187+0.037*WCRPA_100+0.335*WCRPA_100^2+0*WCRPA_100^3+0*WCRPA_100^4+0*WCRPA_100^5
    '
    'CORRECT WIND DIRECTION MEASUREMENT
    If WIND_DIR>360 Then WIND_DIR=0
    If WIND_DIR<0 Then WIND_DIR=0
    '
    'PART 3: OUTPUT DATA
    '
    'SET LOGGERID TO
    LOGGERID = LID
    '
    'RECORD THE SIGNATURE AS PROGID
    If  TimeIntoInterval(0,1,Min) Then
      PROGID=Status.ProgSignature(1,1)
    EndIf
    '
    '5 MINUTE OUTPUT
    CallTable Table105
    CallTable CONT
  NextScan
EndProg
